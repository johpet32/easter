#!/usr/bin/env python3

# easter 0.1 <https://www.github.com/johpet32/easter>
# Get the date of Easter Day according to the Gregorian calender
# (only meaningful for years after 1582)
#
# Copyright (C) 2020 johpet32
# License: GNU General Public License version 3 or later

import sys
import argparse
CMDNAME = "easter"

def die(errormsg):
    sys.stderr.write(CMDNAME + ': error: ' + errormsg + '\n')
    sys.exit(1)

def print_date(year_in):
    a = year_in % 19
    b = year_in // 100
    c = year_in % 100
    d = b // 4
    e = b % 4
    f = (b + 8) // 25
    g = (b - f + 1) // 3
    h = (19*a + b - d - g + 15) % 30
    i = c // 4
    k = c % 4
    l = (32 + 2*e + 2*i - h - k) % 7
    m = (a + 11*h + 22*l) // 451
    month = (h + l - 7*m + 114) // 31
    day = ((h + l - 7*m + 114) % 31) + 1

    if month == 3:
        month_str = "March"
    elif month == 4:
        month_str = "April"
    else:
        die("internal error 1")

    if day < 1 or (day + month > 34):
        die("internal error 2")

    print(year, '\tSunday', day, 'of', month_str)

### Main ###
parser = argparse.ArgumentParser(prog=CMDNAME,
  description='Get the date of Easter Day according to '
  'the Gregorian calender. Only meaningful for years after 1582.')

parser.add_argument('-v', '--version', action='version',
  version=CMDNAME + ' 0.1')

parser.add_argument('years', metavar='YEAR', type=int, nargs='+',
  help='the year(s) you are interested in')

args = parser.parse_args()

for year in args.years:
    if year < 1583:
        die("this algorithm is meaningless for years before 1583")

for year in args.years:
    print_date(year)

sys.exit(0)
